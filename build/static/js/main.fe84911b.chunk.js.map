{"version":3,"sources":["services/persons.js","components/Filter.js","components/NewPerson.js","components/PhoneBook.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","put","concat","delete","doNothing","event","preventDefault","Filter","newFilter","filterNames","react_default","a","createElement","onSubmit","value","onChange","NewPerson","addEntry","newName","handleNewName","newNumber","handleNewNumber","Fragment","type","PhoneBook","persons","removeEntry","filterUpperCase","toUpperCase","filter","person","name","includes","map","key","number","onClick","styles","success","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","fail","Notification","message","className","style","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewFilter","_useState9","_useState10","notification","setNotification","_useState11","_useState12","setSuccess","useEffect","getPersons","personsService","catch","error","showMessage","successNotification","arguments","length","undefined","setTimeout","target","entryObject","some","e","personId","find","item","updatedEntry","assign","window","confirm","n","returnedPerson","console","log","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fe84911b.chunk.js","sourcesContent":["import axios from 'axios'\n//const baseUrl = 'http://localhost:3001/api/persons'\n//const baseUrl = 'https://cryptic-peak-59110.herokuapp.com/api/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }\n\n\n","import React from 'react'\n\nconst Filter = (newFilter, filterNames) => \n\n<form onSubmit={doNothing}>\n    Rajaa näytettäviä: \n    <input value={newFilter} onChange={filterNames}/>\n</form>\n\nconst doNothing = (event) => event.preventDefault()\n\nexport default Filter","import React from 'react'\n\nconst NewPerson = (addEntry, newName, handleNewName, newNumber, handleNewNumber) => {\n      \n      return  <>\n        <form onSubmit={addEntry}>\n        <div>nimi: <input value={newName}\n        onChange={handleNewName} />\n        </div>\n        <div>numero: <input value={newNumber}\n        onChange={handleNewNumber} />\n        </div>\n        <div><button type=\"submit\">lisää</button></div>\n        </form>\n      </>\n  }\n\n  export default NewPerson","import React from 'react'\n\nconst PhoneBook = (persons, newFilter, removeEntry) => {\n    let filterUpperCase = newFilter.toUpperCase()\n    let newArray = persons.filter((person)=>{\n      let personInUpperCase = person.name.toUpperCase()\n      return personInUpperCase.includes(filterUpperCase)\n    })\n    return newArray.map(person => \n      <div key={person.name}>{person.name} {person.number}<button onClick={() => removeEntry(person)}>poista</button>\n      </div>)\n  }\n\n  export default PhoneBook","import React from 'react'\n\nconst Notification = (message, success) => {\n\n  if (message === null) {\n    return null\n  }\n\n  if (success)\n    return (\n      <div className=\"success\" style={styles.success}>\n        {message}\n      </div>\n    )\n  else\n    return (\n      <div className=\"success\" style={styles.fail}>\n        {message}\n      </div>\n    )\n}\n  \n\n\nvar styles = ({\n    success: {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n\n    },\n    fail: {\n      color: 'red',\n      background: 'lightgrey',\n      fontSize: 20,\n      borderStyle: 'solid',\n      borderRadius: 5,\n      padding: 10,\n      marginBottom: 10,\n\n  },\n  })\n\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personsService from './services/persons'\nimport Filter from './components/Filter'\nimport NewPerson from './components/NewPerson'\nimport PhoneBook from './components/PhoneBook'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [ notification, setNotification] = useState(null)\n  const [ success, setSuccess] = useState(null)\n\n  useEffect(() => {\n    getPersons()\n  }, [])\n\n\n  const getPersons = () => {\n    personsService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n      .catch(error => showMessage(\"Tietojen haku epäonnistui\", false ))\n  }\n\n\n\n  const addEntry = (event) => {\n    event.preventDefault()\n    const entryObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (persons.some(e => e.name === newName)) {\n\n      let personId = persons.find(item => item.name === newName)\n    \n      let updatedEntry = Object.assign(personId, entryObject)\n\n      if (window.confirm(`Do you want to update ${newName} with number ${newNumber}?`)) {\n        personsService\n        .update(personId.id, entryObject)\n          .then( () => {\n            setPersons(persons.map(item => (item.name === newName) ? updatedEntry : item))\n            setNewName('')\n            setNewNumber('')\n            showMessage(`Käyttäjän ${newName} puhelinnumero päivitetty`)\n          })\n          .catch(error => {\n            showMessage(`Päivitys epäonnistui. Käyttäjä ${newName} on jo poistettu puhelinluettelosta.`, false)\n            setPersons(persons.filter(n => n.name !== newName))\n          })\n           \n      }\n    }\n    \n    else {\n\n      if (persons.some(e => e.number === newNumber)){\n        showMessage(`Numero ${newNumber} on jo puhelinluettelossa.`, false)\n      }  \n      else {\n\n        if (newName === \"\" || newNumber === \"\") {\n          showMessage(`Nimi ja numero eivät saa olla tyhjiä`, false)\n        }\n        else {\n          personsService\n          .create(entryObject)\n            .then(returnedPerson => {\n              setPersons(persons.concat(returnedPerson))\n              setNewName('')\n              setNewNumber('')\n              showMessage(`Käyttäjä ${newName} on lisätty puhelinluetteloon`)\n          })\n            .catch(error => {\n              console.log(error.response.data.error)\n              return showMessage(`Numeron lisäys epäonnistui. Lisätiedot virheestä: ${error.response.data.error}`, false)}  )\n            getPersons()\n        }\n      }\n    }\n     \n  }\n\n  const removeEntry = (person) => {\n    if (window.confirm(`Remove ${person.name}?`)) { \n      personsService\n      .remove(person.id)\n        .then( () => {\n          setPersons(persons.filter(item => item.id !== person.id ))\n          showMessage(`Käyttäjä ${person.name} on poistettu puhelinluettelosta`)\n        })\n      .catch(error => {\n          showMessage(`Poisto epäonnistui. Käyttäjä ${person.name} on jo poistettu puhelinluettelosta.`, false)\n          console.log(\"id already removed (or other problem)\")\n          getPersons()\n        })\n    }\n  }\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)  \n  }\n\n  const handleNewNumber= (event) => {\n    setNewNumber(event.target.value)  \n  }\n\n  const filterNames = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const showMessage = (message, successNotification=true) => {\n    setNotification(message)\n    setSuccess(successNotification)\n    \n    setTimeout(() => {\n      setNotification(null)\n      setSuccess(null)\n    }, 8000)\n  }\n\n  return (\n    <div>\n      <h1>Puhelinluettelo</h1>\n      <div>{Notification(notification, success)}</div>\n     {Filter(newFilter, filterNames)}\n      <h2>Lisää uusi</h2>\n        {NewPerson(addEntry, newName, handleNewName, newNumber, handleNewNumber)}\n      <h2>Numerot</h2>\n        {PhoneBook(persons, newFilter, removeEntry)}\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}